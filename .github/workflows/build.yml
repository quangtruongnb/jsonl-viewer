name: Build Wails Application

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  build-windows:
    name: Build Windows Executable
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install Wails CLI
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci
      
    - name: Build for Windows
      run: wails build -platform windows/amd64 -skipbindings -webview2 embed
      env:
        CGO_ENABLED: 1
        CC: x86_64-w64-mingw32-gcc
        CXX: x86_64-w64-mingw32-g++
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: jsonl-viewer-windows
        path: build/bin/jsonl-viewer.exe
        retention-days: 30

  build-macos:
    name: Build macOS Application
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install Wails CLI
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci
      
    - name: Build for macOS
      run: wails build -platform darwin/universal -skipbindings
      
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: jsonl-viewer-macos
        path: build/bin/jsonl-viewer.app
        retention-days: 30

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos]
    if: github.event_name == 'release'
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: jsonl-viewer-windows
        path: dist/windows
        
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: jsonl-viewer-macos
        path: dist/macos
        
    - name: Create release archive
      run: |
        mkdir -p release
        cp dist/windows/jsonl-viewer.exe release/
        cp -r dist/macos/jsonl-viewer.app release/
        
        # Create zip files
        cd release
        zip -r jsonl-viewer-windows.zip jsonl-viewer.exe
        zip -r jsonl-viewer-macos.zip jsonl-viewer.app
        
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release/jsonl-viewer-windows.zip
        asset_name: jsonl-viewer-windows.zip
        asset_content_type: application/zip
        
    - name: Upload macOS asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release/jsonl-viewer-macos.zip
        asset_name: jsonl-viewer-macos.zip
        asset_content_type: application/zip
        
 